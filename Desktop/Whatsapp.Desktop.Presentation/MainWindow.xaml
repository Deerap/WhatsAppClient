<Window x:Class="Whatsapp.Desktop.Presentation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
        xmlns:converters="clr-namespace:Whatsapp.Desktop.Presentation.Converters"
        xmlns:controls="clr-namespace:Whatsapp.Desktop.Presentation.Controls"
        xmlns:extensions="clr-namespace:Whatsapp.Desktop.Presentation.Controls.Extensions"
        xmlns:watermark="clr-namespace:Whatsapp.Desktop.Presentation.Controls.Watermark"
        Title="Whatsapp" Height="550" Width="700" Icon="/Whatsapp.Desktop.Presentation;component/Images/appicon.png" FontFamily="Segoe UI" Loaded="Window_Loaded"  Closing="Window_Closing" StateChanged="Window_StateChanged">

    <Window.Resources>
        <Style x:Key="hideHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style x:Key="highlight" TargetType="Run">
            <Setter Property="Background" Value="#FFfea656" />
        </Style>
        <Style TargetType="{x:Type controls:SearchableTextBlock}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:SearchableTextBlock}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <TextBlock TextWrapping="Wrap" x:Name="PART_TEXT"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        
        
        <converters:DateToStringConverter x:Key="dateToStringConverter" />
        <converters:IntegerToVisibilityConverter x:Key="integerToVisibilityConverter" />
        <converters:IntegerToFontWeightConverter x:Key="integerToFontWeightConverter" />
        <converters:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <converters:ReverseBooleanToVisibilityConverter x:Key="reverseBooleanToVisibilityConverter" />
        <converters:MessageTypeToColorBrushConverter x:Key="messageTypeToColorBrushConverter" />
        <converters:MessageTypeToCornerRadiusConverter x:Key="messageTypeToCornerRadiusConverter"/>
        <converters:MessageTypeToMarginThicknessConverter x:Key="messageTypeToMarginThicknessConverter"/>
        <converters:MessageTypeToBorderThicknessConverter x:Key="messageTypeToBorderThicknessConverter"/>
        <converters:MessageTypeToVisibilityConverter x:Key="messageTypeToVisibilityConverter"/>
        <converters:StringToXamlConverter x:Key="stringToXamlConverter" />
    </Window.Resources>
    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="6*" />
        </Grid.ColumnDefinitions>
        <GridSplitter ResizeDirection="Columns" Grid.Column="1" Width="4" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FF373e44" Opacity="0.3" />

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="32"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="32"></RowDefinition>
            </Grid.RowDefinitions>
            <Border BorderBrush="DarkCyan" BorderThickness="1" CornerRadius="2" Padding="0" Margin="2,4,2,4">
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="24"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="txtSearch" BorderThickness="0" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Text="{Binding Path=SearchText, Mode=TwoWay, UpdateSourceTrigger=Explicit}" TextChanged="txtSearch_TextChanged">
                        <watermark:WatermarkService.Watermark>
                            <TextBlock Margin="0" Padding="0" VerticalAlignment="Center">Search</TextBlock>
                        </watermark:WatermarkService.Watermark>
                    </TextBox>
                    <Button x:Name="cmdClear"  Grid.Column="1" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" 
                            Visibility="{Binding Path=InSearchMode, Converter={StaticResource booleanToVisibilityConverter}}" Click="cmdClear_Click">
                        <Button.Content>
                            <Image Margin="2" Width="16" Source="Images/delete.png" />
                        </Button.Content>
                    </Button>
                    <Image Grid.Column="1" Margin="2" Width="16" Source="Images/search.png" Visibility="{Binding Path=InSearchMode, Converter={StaticResource reverseBooleanToVisibilityConverter}}" />

                </Grid>
            </Border>
            <ListView Grid.Row="1"  Name="lvwRoster" SizeChanged="lvwRoster_SizeChanged" ScrollViewer.CanContentScroll="True"
                      ItemsSource="{Binding Path = Items}"
                      SelectedItem="{Binding Path= RosterInstance.SelectedItem, Mode=TwoWay}" BorderBrush="DarkCyan" BorderThickness="0 1 0 1">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView ColumnHeaderContainerStyle="{StaticResource hideHeaderStyle}">
                        <GridViewColumn>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="#61738B" BorderThickness="0 0 0 0.1" Padding="1">
                                        <Grid HorizontalAlignment="Stretch" Height="54">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Rectangle RadiusX="20" RadiusY="20">
                                                <Rectangle.Fill>
                                                    <ImageBrush x:Name="rosterMainAvatar" ImageSource="{Binding Path = AvatarPreviewURL}"></ImageBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <Grid Grid.Column="1" Margin="2" HorizontalAlignment="Stretch">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="20"></RowDefinition>
                                                    <RowDefinition></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <Grid HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="50"/>
                                                    </Grid.ColumnDefinitions>
                                                    <controls:SearchableTextBlock Text="{Binding Path = Name}" VerticalAlignment="Top" SearchText="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.SearchText}" />
                                                    <TextBlock Grid.Column="1" Text="{Binding Path = Presence}" Foreground="#FF0083c7" FontSize="10" TextAlignment="Right"/>
                                                </Grid>
                                                <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="50" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Path=Message.Text}" VerticalAlignment="Top" FontSize="11" Foreground="Gray" TextWrapping="Wrap" TextTrimming="CharacterEllipsis"/>
                                                    <!--<Border Grid.Column="1" BorderBrush="#FFf1831f" BorderThickness="0" CornerRadius="2" Background="#FFf1831f" VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="{Binding UnreadCount, Converter={StaticResource integerToVisibilityConverter}}">
                                                        <Grid VerticalAlignment="Top">
                                                            <TextBlock Text="10" FontSize="10" Foreground="White" VerticalAlignment="Top" TextAlignment="Center" Padding="2" MinWidth="16"/>
                                                        </Grid>
                                                    </Border>-->
                                                </Grid>
                                                <Grid Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Visibility="{Binding Path=Message.MessageType,Converter={StaticResource messageTypeToVisibilityConverter} }">
                                                    <Grid.Resources>
                                                        <converters:SwitchConverter x:Key="msgStatusIcon">
                                                            <converters:SwitchConverterCase When="Sent" Then="Images/msg_unsent.png" />
                                                            <converters:SwitchConverterCase When="DeliveredToServer" Then="Images/msg_deliveredserver.png" />
                                                            <converters:SwitchConverterCase When="DeliveredToClient" Then="Images/msg_deliveredclient.png" />
                                                        </converters:SwitchConverter>
                                                    </Grid.Resources>
                                                    <!--<TextBlock Text="{Binding MessageStatus, Converter={StaticResource MessageStatusToTextConverter}}" FontSize="10" Foreground="Gray" FontWeight="Bold" VerticalAlignment="Top" TextAlignment="Center" 
                                                               Padding="2" MinWidth="16" HorizontalAlignment="Right"/>-->
                                                    <Image Source="{Binding Message.MessageStatus, Converter={StaticResource msgStatusIcon}}" VerticalAlignment="Center" HorizontalAlignment="Right" Width="15" Height="10" Stretch="Uniform"/>
                                                </Grid>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="9*"></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition Width="9*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Name="btnAddContact" HorizontalContentAlignment="Left" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Click="btnAddContact_Click" >
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Stretch">
                        <Image Source="Images/add_person_gray.png" HorizontalAlignment="Left" Width="30" Height="30" Margin="8,0,0,0"></Image>
                        <TextBlock Text="Add" Margin="50,0,6,0" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
                    </Grid>
                </Button>
                <Separator Grid.Column="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" />
                <Button Name="btnRemoveContact" HorizontalContentAlignment="Left" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Click="btnRemoveContact_Click" Grid.Column="2" >
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Stretch">
                        <Image Source="Images/ic_menu_delete.png" HorizontalAlignment="Left" Width="30" Height="30" Margin="8,0,0,0"></Image>
                        <TextBlock Text="Remove" Margin="50,0,6,0" HorizontalAlignment="Left" VerticalAlignment="Center"></TextBlock>
                    </Grid>
                </Button>
            </Grid>
        </Grid>

        <Grid Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="60"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Border BorderBrush="#FF0e4964" BorderThickness="0 0 0 1">
                <Grid Background="#075E55">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="60"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <!--<Border BorderBrush="#FF1db0ed" BorderThickness="0" CornerRadius="100" Padding="0" Margin="4" Background="White">
                        <Image VerticalAlignment="Center" HorizontalAlignment="Center" Width="48" Height="48" Source="{Binding Path=Roster.SelectedItem.AvatarPreviewURL}" Stretch="Uniform" ></Image>
                    </Border>-->
                    <Rectangle RadiusX="20" RadiusY="20">
                        <Rectangle.Fill>
                            <ImageBrush x:Name="chatMainAvatar" 
                                        ImageSource="{Binding Path = RosterInstance.SelectedItem.AvatarPreviewURL, Mode=TwoWay}"></ImageBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding RosterInstance.SelectedItem.Name}" Margin="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontSize="14" FontWeight="Medium" Foreground="White">
                        </TextBlock>
                        <TextBlock Text="{Binding RosterInstance.SelectedItem.Status}" Margin="4,27,4,3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontSize="12" Foreground="White" Grid.RowSpan="2"/>

                        <!--<TextBlock Text="{Binding RosterInstance.SelectedItem.Status}" Margin="4,27,4,3"  VerticalAlignment="Stretch"  HorizontalAlignment="Stretch" FontSize="12" Foreground="White" Grid.RowSpan="2" x:Name="tbStatus" Canvas.Left="-131" Loaded="tbStatus_Loaded">
                            <TextBlock.Resources>
                                <Storyboard x:Key="slide">
                                    <DoubleAnimation From="0" To="{Binding Width, ElementName=tbStatus}" Duration="00:00:10"
                                                     Storyboard.TargetProperty="X" Storyboard.TargetName="transferCurreny" RepeatBehavior="Forever"/>
                                </Storyboard>
                            </TextBlock.Resources>
                            <TextBlock.RenderTransform>
                                <TranslateTransform x:Name="transferCurreny" X="0"/>
                            </TextBlock.RenderTransform>
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="TextBlock.Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource slide}" />
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>-->
                    </Grid>
                </Grid>
            </Border>
            <ListView BorderThickness="0" Grid.Row="1" 
                      Name="lvwMessages" SizeChanged="lvwMessages_SizeChanged" extensions:ListViewExtensions.AutoScrollToEnd="True" 
                      Foreground="Black" ItemsSource="{Binding Path = Messages}" IsTextSearchEnabled="False">
                
                <ListView.Background>
                    <ImageBrush ImageSource="Images/WhatsApp-Wallpaper.jpg" Stretch="Fill" TileMode="Tile"></ImageBrush>
                </ListView.Background>
                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <Border CornerRadius ="10,10,10,10" Background="WhiteSmoke" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,5,0,0">
                                    <TextBlock FontSize="10" Text="{Binding Path=Name, StringFormat='dd MMM yyyy hh:mm tt'}" HorizontalAlignment="Center" Foreground="DarkGray" Margin="8" />
                                </Border>
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView ColumnHeaderContainerStyle="{StaticResource hideHeaderStyle}">
                        <GridViewColumn>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid MinHeight="30" Margin="0,4,0,4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid>
                                            <Grid.Resources>
                                                <converters:SwitchConverter x:Key="msgStatusIcon">
                                                    <converters:SwitchConverterCase When="Sent" Then="Images/msg_unsent.png" />
                                                    <converters:SwitchConverterCase When="DeliveredToServer" Then="Images/msg_deliveredserver.png" />
                                                    <converters:SwitchConverterCase When="DeliveredToClient" Then="Images/msg_deliveredclient.png" />
                                                </converters:SwitchConverter>
                                            </Grid.Resources>
                                            <!--<Border Background="White" CornerRadius="8" Padding="8" Margin="8,0,0,0" BorderThickness="1" BorderBrush="Silver">-->
                                            <Border Background="{Binding MessageType, Converter={StaticResource messageTypeToColorBrushConverter}}"
                                                    CornerRadius="{Binding MessageType, Converter={StaticResource messageTypeToCornerRadiusConverter}}" 
                                                    Padding="8" 
                                                    Margin="{Binding MessageType, Converter={StaticResource messageTypeToMarginThicknessConverter}}"
                                                    BorderThickness="{Binding MessageType, Converter={StaticResource messageTypeToBorderThicknessConverter}}" 
                                                    BorderBrush="Silver" >
                                                <DockPanel>
                                                    <TextBlock  DockPanel.Dock="Top" FontSize="10"  VerticalAlignment="Top" Padding="0,0,0,1" Text="{Binding Path=FromInfo}" Foreground="Gray" HorizontalAlignment="Stretch" Visibility="{Binding Path=GroupMessage, Converter={StaticResource booleanToVisibilityConverter}}"></TextBlock>
                                                    <controls:SearchableTextBlock Text="{Binding Text}" SearchText="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Window}, Path=DataContext.SearchText}" DockPanel.Dock="Top" />
                                                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Bottom" Orientation="Horizontal">
                                                        <TextBlock DockPanel.Dock="Bottom" FontSize="10"  VerticalAlignment="Bottom" Padding="0,0,0,1" Text="{Binding Time, StringFormat='hh:mm'}" Foreground="Gray" HorizontalAlignment="Right" TextWrapping="Wrap"></TextBlock>
                                                        <Image Source="{Binding MessageStatus, Converter={StaticResource msgStatusIcon}}" VerticalAlignment="Center" HorizontalAlignment="Right" Width="14" Height="9" Stretch="Uniform" Margin="2,0,0,0" Visibility="{Binding MessageType, Converter={StaticResource messageTypeToVisibilityConverter}}"/>
                                                    </StackPanel>
                                                </DockPanel>
                                            </Border>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>
            <Grid Grid.Row="2" VerticalAlignment = "Stretch"  HorizontalAlignment = "Stretch" Height="50" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="50"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBox Name="txtChatMessage" Grid.Column="0" HorizontalAlignment = "Stretch" VerticalAlignment = "Stretch" KeyUp="txtChatMessage_KeyUp" Visibility="Visible" TextWrapping="Wrap" AcceptsReturn="True">
                </TextBox>
                <Button Name="btnSendChat" Grid.Column="1"  Click="btnSendChat_Click" VerticalAlignment = "Stretch" HorizontalAlignment="Stretch" >Send</Button>
            </Grid>
        </Grid>

    </Grid>
</Window>